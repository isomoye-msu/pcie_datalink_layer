// Generated by PeakRDL-regblock - A free and open-source SystemVerilog generator
//  https://github.com/SystemRDL/PeakRDL-regblock

package pcie_config_reg_pkg;

    localparam PCIE_CONFIG_REG_DATA_WIDTH = 32;
    localparam PCIE_CONFIG_REG_MIN_ADDR_WIDTH = 9;
    localparam PCIE_CONFIG_REG_SIZE = 'h104;

    

    typedef struct {
        logic [7:0] next;
    } pcie_config_reg__byte_offset_0C__cache_line_size_register__in_t;

    typedef struct {
        logic [7:0] next;
    } pcie_config_reg__byte_offset_0C__latency_timer_register__in_t;

    typedef struct {
        logic [7:0] next;
    } pcie_config_reg__byte_offset_0C__interrupt_line_register__in_t;

    typedef struct {
        logic [7:0] next;
    } pcie_config_reg__byte_offset_0C__interrupt_pin_register__in_t;

    typedef struct {
        pcie_config_reg__byte_offset_0C__cache_line_size_register__in_t cache_line_size_register;
        pcie_config_reg__byte_offset_0C__latency_timer_register__in_t latency_timer_register;
        pcie_config_reg__byte_offset_0C__interrupt_line_register__in_t interrupt_line_register;
        pcie_config_reg__byte_offset_0C__interrupt_pin_register__in_t interrupt_pin_register;
    } pcie_config_reg__byte_offset_0C__in_t;

    typedef struct {
        logic [31:0] next;
    } pcie_config_reg__base_ddress_register_2__BAR__in_t;

    typedef struct {
        pcie_config_reg__base_ddress_register_2__BAR__in_t BAR;
    } pcie_config_reg__base_ddress_register_2__in_t;

    typedef struct {
        logic [31:0] next;
    } pcie_config_reg__base_ddress_register_3__BAR__in_t;

    typedef struct {
        pcie_config_reg__base_ddress_register_3__BAR__in_t BAR;
    } pcie_config_reg__base_ddress_register_3__in_t;

    typedef struct {
        logic [31:0] next;
    } pcie_config_reg__base_ddress_register_4__BAR__in_t;

    typedef struct {
        pcie_config_reg__base_ddress_register_4__BAR__in_t BAR;
    } pcie_config_reg__base_ddress_register_4__in_t;

    typedef struct {
        logic [31:0] next;
    } pcie_config_reg__base_ddress_register_5__BAR__in_t;

    typedef struct {
        pcie_config_reg__base_ddress_register_5__BAR__in_t BAR;
    } pcie_config_reg__base_ddress_register_5__in_t;

    typedef struct {
        logic [31:0] next;
    } pcie_config_reg__cardbus_cis_pointer__word__in_t;

    typedef struct {
        pcie_config_reg__cardbus_cis_pointer__word__in_t word;
    } pcie_config_reg__cardbus_cis_pointer__in_t;

    typedef struct {
        logic [7:0] next;
    } pcie_config_reg__byte_offset_3C__interrupt_line__in_t;

    typedef struct {
        logic [7:0] next;
    } pcie_config_reg__byte_offset_3C__interrupt_pin__in_t;

    typedef struct {
        pcie_config_reg__byte_offset_3C__interrupt_line__in_t interrupt_line;
        pcie_config_reg__byte_offset_3C__interrupt_pin__in_t interrupt_pin;
    } pcie_config_reg__byte_offset_3C__in_t;

    typedef struct {
        logic [4:0] next;
    } pcie_config_reg__lane_error_status_register__lane_error__in_t;

    typedef struct {
        pcie_config_reg__lane_error_status_register__lane_error__in_t lane_error;
    } pcie_config_reg__lane_error_status_register__in_t;

    typedef struct {
        logic [3:0] next;
    } pcie_config_reg__lane_eq_ctrl_register__downstream_tx_preset__in_t;

    typedef struct {
        logic [2:0] next;
    } pcie_config_reg__lane_eq_ctrl_register__downstream_rx_preset_hint__in_t;

    typedef struct {
        logic [3:0] next;
    } pcie_config_reg__lane_eq_ctrl_register__upstream_tx_preset__in_t;

    typedef struct {
        logic [2:0] next;
    } pcie_config_reg__lane_eq_ctrl_register__upstream_rx_preset_hint__in_t;

    typedef struct {
        pcie_config_reg__lane_eq_ctrl_register__downstream_tx_preset__in_t downstream_tx_preset;
        pcie_config_reg__lane_eq_ctrl_register__downstream_rx_preset_hint__in_t downstream_rx_preset_hint;
        pcie_config_reg__lane_eq_ctrl_register__upstream_tx_preset__in_t upstream_tx_preset;
        pcie_config_reg__lane_eq_ctrl_register__upstream_rx_preset_hint__in_t upstream_rx_preset_hint;
    } pcie_config_reg__lane_eq_ctrl_register__in_t;

    typedef struct {
        pcie_config_reg__byte_offset_0C__in_t byte_offset_0C;
        pcie_config_reg__base_ddress_register_2__in_t base_ddress_register_2;
        pcie_config_reg__base_ddress_register_3__in_t base_ddress_register_3;
        pcie_config_reg__base_ddress_register_4__in_t base_ddress_register_4;
        pcie_config_reg__base_ddress_register_5__in_t base_ddress_register_5;
        pcie_config_reg__cardbus_cis_pointer__in_t cardbus_cis_pointer;
        pcie_config_reg__byte_offset_3C__in_t byte_offset_3C;
        pcie_config_reg__lane_error_status_register__in_t lane_error_status_register;
        pcie_config_reg__lane_eq_ctrl_register__in_t lane_eq_ctrl_register;
    } pcie_config_reg__in_t;

    typedef struct {
        logic [15:0] value;
    } pcie_config_reg__byte_offset_00__Vendor_ID__out_t;

    typedef struct {
        logic [15:0] value;
    } pcie_config_reg__byte_offset_00__Device_ID__out_t;

    typedef struct {
        pcie_config_reg__byte_offset_00__Vendor_ID__out_t Vendor_ID;
        pcie_config_reg__byte_offset_00__Device_ID__out_t Device_ID;
    } pcie_config_reg__byte_offset_00__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__bus_master_enable__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__special_cycle_enable__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__memory_write_invalidate__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__vga_palette_snoop__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__parity_error_response__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__idsel_step_wait_cycle_control__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__SERR_Enable__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__fast_b2b_transactions_enable__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__interrupt_disable__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__byte_offset_04__rsvd__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__interrupt_status__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__capabilities_list__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__sixtysix_mhz_capable__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__fast_b2b_transactions_capable__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__master_data_parity_error__out_t;

    typedef struct {
        logic [1:0] value;
    } pcie_config_reg__byte_offset_04__devsel_timing__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__signaled_target_abort__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__received_target_abort__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__received_master_abort__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__signaled_system_error__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__byte_offset_04__detected_parity_error__out_t;

    typedef struct {
        pcie_config_reg__byte_offset_04__bus_master_enable__out_t bus_master_enable;
        pcie_config_reg__byte_offset_04__special_cycle_enable__out_t special_cycle_enable;
        pcie_config_reg__byte_offset_04__memory_write_invalidate__out_t memory_write_invalidate;
        pcie_config_reg__byte_offset_04__vga_palette_snoop__out_t vga_palette_snoop;
        pcie_config_reg__byte_offset_04__parity_error_response__out_t parity_error_response;
        pcie_config_reg__byte_offset_04__idsel_step_wait_cycle_control__out_t idsel_step_wait_cycle_control;
        pcie_config_reg__byte_offset_04__SERR_Enable__out_t SERR_Enable;
        pcie_config_reg__byte_offset_04__fast_b2b_transactions_enable__out_t fast_b2b_transactions_enable;
        pcie_config_reg__byte_offset_04__interrupt_disable__out_t interrupt_disable;
        pcie_config_reg__byte_offset_04__rsvd__out_t rsvd;
        pcie_config_reg__byte_offset_04__interrupt_status__out_t interrupt_status;
        pcie_config_reg__byte_offset_04__capabilities_list__out_t capabilities_list;
        pcie_config_reg__byte_offset_04__sixtysix_mhz_capable__out_t sixtysix_mhz_capable;
        pcie_config_reg__byte_offset_04__fast_b2b_transactions_capable__out_t fast_b2b_transactions_capable;
        pcie_config_reg__byte_offset_04__master_data_parity_error__out_t master_data_parity_error;
        pcie_config_reg__byte_offset_04__devsel_timing__out_t devsel_timing;
        pcie_config_reg__byte_offset_04__signaled_target_abort__out_t signaled_target_abort;
        pcie_config_reg__byte_offset_04__received_target_abort__out_t received_target_abort;
        pcie_config_reg__byte_offset_04__received_master_abort__out_t received_master_abort;
        pcie_config_reg__byte_offset_04__signaled_system_error__out_t signaled_system_error;
        pcie_config_reg__byte_offset_04__detected_parity_error__out_t detected_parity_error;
    } pcie_config_reg__byte_offset_04__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__byte_offset_08__Revision_ID__out_t;

    typedef struct {
        logic [23:0] value;
    } pcie_config_reg__byte_offset_08__Class_Code__out_t;

    typedef struct {
        pcie_config_reg__byte_offset_08__Revision_ID__out_t Revision_ID;
        pcie_config_reg__byte_offset_08__Class_Code__out_t Class_Code;
    } pcie_config_reg__byte_offset_08__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__byte_offset_0C__cache_line_size_register__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__byte_offset_0C__latency_timer_register__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__byte_offset_0C__interrupt_line_register__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__byte_offset_0C__interrupt_pin_register__out_t;

    typedef struct {
        pcie_config_reg__byte_offset_0C__cache_line_size_register__out_t cache_line_size_register;
        pcie_config_reg__byte_offset_0C__latency_timer_register__out_t latency_timer_register;
        pcie_config_reg__byte_offset_0C__interrupt_line_register__out_t interrupt_line_register;
        pcie_config_reg__byte_offset_0C__interrupt_pin_register__out_t interrupt_pin_register;
    } pcie_config_reg__byte_offset_0C__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__base_address_register_0__region_type__out_t;

    typedef struct {
        logic [1:0] value;
    } pcie_config_reg__base_address_register_0__locatable__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__base_address_register_0__prefetchable__out_t;

    typedef struct {
        logic [27:0] value;
    } pcie_config_reg__base_address_register_0__base_adress__out_t;

    typedef struct {
        pcie_config_reg__base_address_register_0__region_type__out_t region_type;
        pcie_config_reg__base_address_register_0__locatable__out_t locatable;
        pcie_config_reg__base_address_register_0__prefetchable__out_t prefetchable;
        pcie_config_reg__base_address_register_0__base_adress__out_t base_adress;
    } pcie_config_reg__base_address_register_0__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__base_ddress_register_1__region_type__out_t;

    typedef struct {
        logic [1:0] value;
    } pcie_config_reg__base_ddress_register_1__locatable__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__base_ddress_register_1__prefetchable__out_t;

    typedef struct {
        logic [27:0] value;
    } pcie_config_reg__base_ddress_register_1__base_adress__out_t;

    typedef struct {
        pcie_config_reg__base_ddress_register_1__region_type__out_t region_type;
        pcie_config_reg__base_ddress_register_1__locatable__out_t locatable;
        pcie_config_reg__base_ddress_register_1__prefetchable__out_t prefetchable;
        pcie_config_reg__base_ddress_register_1__base_adress__out_t base_adress;
    } pcie_config_reg__base_ddress_register_1__out_t;

    typedef struct {
        logic [31:0] value;
    } pcie_config_reg__base_ddress_register_2__BAR__out_t;

    typedef struct {
        pcie_config_reg__base_ddress_register_2__BAR__out_t BAR;
    } pcie_config_reg__base_ddress_register_2__out_t;

    typedef struct {
        logic [31:0] value;
    } pcie_config_reg__base_ddress_register_3__BAR__out_t;

    typedef struct {
        pcie_config_reg__base_ddress_register_3__BAR__out_t BAR;
    } pcie_config_reg__base_ddress_register_3__out_t;

    typedef struct {
        logic [31:0] value;
    } pcie_config_reg__base_ddress_register_4__BAR__out_t;

    typedef struct {
        pcie_config_reg__base_ddress_register_4__BAR__out_t BAR;
    } pcie_config_reg__base_ddress_register_4__out_t;

    typedef struct {
        logic [31:0] value;
    } pcie_config_reg__base_ddress_register_5__BAR__out_t;

    typedef struct {
        pcie_config_reg__base_ddress_register_5__BAR__out_t BAR;
    } pcie_config_reg__base_ddress_register_5__out_t;

    typedef struct {
        logic [31:0] value;
    } pcie_config_reg__cardbus_cis_pointer__word__out_t;

    typedef struct {
        pcie_config_reg__cardbus_cis_pointer__word__out_t word;
    } pcie_config_reg__cardbus_cis_pointer__out_t;

    typedef struct {
        logic [15:0] value;
    } pcie_config_reg__byte_offset_2C__Vendor_ID__out_t;

    typedef struct {
        logic [15:0] value;
    } pcie_config_reg__byte_offset_2C__Device_ID__out_t;

    typedef struct {
        pcie_config_reg__byte_offset_2C__Vendor_ID__out_t Vendor_ID;
        pcie_config_reg__byte_offset_2C__Device_ID__out_t Device_ID;
    } pcie_config_reg__byte_offset_2C__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__capabilities_pointer__capabilities_ptr__out_t;

    typedef struct {
        pcie_config_reg__capabilities_pointer__capabilities_ptr__out_t capabilities_ptr;
    } pcie_config_reg__capabilities_pointer__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__byte_offset_3C__interrupt_line__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__byte_offset_3C__interrupt_pin__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__byte_offset_3C__min_gnt__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__byte_offset_3C__max_lat__out_t;

    typedef struct {
        pcie_config_reg__byte_offset_3C__interrupt_line__out_t interrupt_line;
        pcie_config_reg__byte_offset_3C__interrupt_pin__out_t interrupt_pin;
        pcie_config_reg__byte_offset_3C__min_gnt__out_t min_gnt;
        pcie_config_reg__byte_offset_3C__max_lat__out_t max_lat;
    } pcie_config_reg__byte_offset_3C__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__capabilities_power_mngt_pointer__capabilities_id__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__capabilities_power_mngt_pointer__next_cap_ptr__out_t;

    typedef struct {
        logic [2:0] value;
    } pcie_config_reg__capabilities_power_mngt_pointer__version__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__capabilities_power_mngt_pointer__pme_clock__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__capabilities_power_mngt_pointer__dev_spec_init__out_t;

    typedef struct {
        logic [2:0] value;
    } pcie_config_reg__capabilities_power_mngt_pointer__aux_current__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__capabilities_power_mngt_pointer__d1_support__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__capabilities_power_mngt_pointer__d2_support__out_t;

    typedef struct {
        logic [4:0] value;
    } pcie_config_reg__capabilities_power_mngt_pointer__pme_support__out_t;

    typedef struct {
        pcie_config_reg__capabilities_power_mngt_pointer__capabilities_id__out_t capabilities_id;
        pcie_config_reg__capabilities_power_mngt_pointer__next_cap_ptr__out_t next_cap_ptr;
        pcie_config_reg__capabilities_power_mngt_pointer__version__out_t version;
        pcie_config_reg__capabilities_power_mngt_pointer__pme_clock__out_t pme_clock;
        pcie_config_reg__capabilities_power_mngt_pointer__dev_spec_init__out_t dev_spec_init;
        pcie_config_reg__capabilities_power_mngt_pointer__aux_current__out_t aux_current;
        pcie_config_reg__capabilities_power_mngt_pointer__d1_support__out_t d1_support;
        pcie_config_reg__capabilities_power_mngt_pointer__d2_support__out_t d2_support;
        pcie_config_reg__capabilities_power_mngt_pointer__pme_support__out_t pme_support;
    } pcie_config_reg__capabilities_power_mngt_pointer__out_t;

    typedef struct {
        logic [1:0] value;
    } pcie_config_reg__power_management_pointer__power_state__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__power_management_pointer__pme_enable__out_t;

    typedef struct {
        logic [3:0] value;
    } pcie_config_reg__power_management_pointer__data_select__out_t;

    typedef struct {
        logic [1:0] value;
    } pcie_config_reg__power_management_pointer__data_scale__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__power_management_pointer__pme_status__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__power_management_pointer__b2_b3_support__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__power_management_pointer__bus_pwr_clk_ctrl_en__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__power_management_pointer__data__out_t;

    typedef struct {
        pcie_config_reg__power_management_pointer__power_state__out_t power_state;
        pcie_config_reg__power_management_pointer__pme_enable__out_t pme_enable;
        pcie_config_reg__power_management_pointer__data_select__out_t data_select;
        pcie_config_reg__power_management_pointer__data_scale__out_t data_scale;
        pcie_config_reg__power_management_pointer__pme_status__out_t pme_status;
        pcie_config_reg__power_management_pointer__b2_b3_support__out_t b2_b3_support;
        pcie_config_reg__power_management_pointer__bus_pwr_clk_ctrl_en__out_t bus_pwr_clk_ctrl_en;
        pcie_config_reg__power_management_pointer__data__out_t data;
    } pcie_config_reg__power_management_pointer__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__capabilities_power_na_pointer__capabilities_id__out_t;

    typedef struct {
        logic [7:0] value;
    } pcie_config_reg__capabilities_power_na_pointer__next_cap_ptr__out_t;

    typedef struct {
        logic [3:0] value;
    } pcie_config_reg__capabilities_power_na_pointer__capability_version__out_t;

    typedef struct {
        logic [3:0] value;
    } pcie_config_reg__capabilities_power_na_pointer__device_port_type__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__capabilities_power_na_pointer__slot_implemented__out_t;

    typedef struct {
        logic [4:0] value;
    } pcie_config_reg__capabilities_power_na_pointer__interrupt_msg_number__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__capabilities_power_na_pointer__Undefined__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__capabilities_power_na_pointer__RsvdP__out_t;

    typedef struct {
        pcie_config_reg__capabilities_power_na_pointer__capabilities_id__out_t capabilities_id;
        pcie_config_reg__capabilities_power_na_pointer__next_cap_ptr__out_t next_cap_ptr;
        pcie_config_reg__capabilities_power_na_pointer__capability_version__out_t capability_version;
        pcie_config_reg__capabilities_power_na_pointer__device_port_type__out_t device_port_type;
        pcie_config_reg__capabilities_power_na_pointer__slot_implemented__out_t slot_implemented;
        pcie_config_reg__capabilities_power_na_pointer__interrupt_msg_number__out_t interrupt_msg_number;
        pcie_config_reg__capabilities_power_na_pointer__Undefined__out_t Undefined;
        pcie_config_reg__capabilities_power_na_pointer__RsvdP__out_t RsvdP;
    } pcie_config_reg__capabilities_power_na_pointer__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__link_control_3_register__perform_equalization__out_t;

    typedef struct {
        logic value;
    } pcie_config_reg__link_control_3_register__link_eq_req_intr_en__out_t;

    typedef struct {
        pcie_config_reg__link_control_3_register__perform_equalization__out_t perform_equalization;
        pcie_config_reg__link_control_3_register__link_eq_req_intr_en__out_t link_eq_req_intr_en;
    } pcie_config_reg__link_control_3_register__out_t;

    typedef struct {
        logic [4:0] value;
    } pcie_config_reg__lane_error_status_register__lane_error__out_t;

    typedef struct {
        pcie_config_reg__lane_error_status_register__lane_error__out_t lane_error;
    } pcie_config_reg__lane_error_status_register__out_t;

    typedef struct {
        logic [3:0] value;
    } pcie_config_reg__lane_eq_ctrl_register__downstream_tx_preset__out_t;

    typedef struct {
        logic [2:0] value;
    } pcie_config_reg__lane_eq_ctrl_register__downstream_rx_preset_hint__out_t;

    typedef struct {
        logic [3:0] value;
    } pcie_config_reg__lane_eq_ctrl_register__upstream_tx_preset__out_t;

    typedef struct {
        logic [2:0] value;
    } pcie_config_reg__lane_eq_ctrl_register__upstream_rx_preset_hint__out_t;

    typedef struct {
        pcie_config_reg__lane_eq_ctrl_register__downstream_tx_preset__out_t downstream_tx_preset;
        pcie_config_reg__lane_eq_ctrl_register__downstream_rx_preset_hint__out_t downstream_rx_preset_hint;
        pcie_config_reg__lane_eq_ctrl_register__upstream_tx_preset__out_t upstream_tx_preset;
        pcie_config_reg__lane_eq_ctrl_register__upstream_rx_preset_hint__out_t upstream_rx_preset_hint;
    } pcie_config_reg__lane_eq_ctrl_register__out_t;

    typedef struct {
        logic [31:0] value;
    } pcie_config_reg__extended_capabilities__ext_cap__out_t;

    typedef struct {
        pcie_config_reg__extended_capabilities__ext_cap__out_t ext_cap;
    } pcie_config_reg__extended_capabilities__out_t;

    typedef struct {
        pcie_config_reg__byte_offset_00__out_t byte_offset_00;
        pcie_config_reg__byte_offset_04__out_t byte_offset_04;
        pcie_config_reg__byte_offset_08__out_t byte_offset_08;
        pcie_config_reg__byte_offset_0C__out_t byte_offset_0C;
        pcie_config_reg__base_address_register_0__out_t base_address_register_0;
        pcie_config_reg__base_ddress_register_1__out_t base_ddress_register_1;
        pcie_config_reg__base_ddress_register_2__out_t base_ddress_register_2;
        pcie_config_reg__base_ddress_register_3__out_t base_ddress_register_3;
        pcie_config_reg__base_ddress_register_4__out_t base_ddress_register_4;
        pcie_config_reg__base_ddress_register_5__out_t base_ddress_register_5;
        pcie_config_reg__cardbus_cis_pointer__out_t cardbus_cis_pointer;
        pcie_config_reg__byte_offset_2C__out_t byte_offset_2C;
        pcie_config_reg__capabilities_pointer__out_t capabilities_pointer;
        pcie_config_reg__byte_offset_3C__out_t byte_offset_3C;
        pcie_config_reg__capabilities_power_mngt_pointer__out_t capabilities_power_mngt_pointer;
        pcie_config_reg__power_management_pointer__out_t power_management_pointer;
        pcie_config_reg__capabilities_power_na_pointer__out_t capabilities_power_na_pointer;
        pcie_config_reg__link_control_3_register__out_t link_control_3_register;
        pcie_config_reg__lane_error_status_register__out_t lane_error_status_register;
        pcie_config_reg__lane_eq_ctrl_register__out_t lane_eq_ctrl_register;
        pcie_config_reg__extended_capabilities__out_t extended_capabilities;
    } pcie_config_reg__out_t;
endpackage
